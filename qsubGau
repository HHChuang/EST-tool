#!/bin/bash
#############################################################################
# Program :								   									#
#	Create the submitted file of GAUSSIAN09 input file in elderberry server #
#   IP: 140.109.90.234                                                      #
#                                                                           #
# Input:									   								#
#	$1=all; submit all Gaussian input files.			   					#
#	$1=test.com; submit one Gaussian input file.			   				#
# Output:								   									#
#	*.sge (submitted file)					   								#
#                                                                           #
# History:                                                                  #
# 2015/04/15, Grace, revise                                                 #
# 2015/11/16, Grace, test version, change PBS system into SGE system        #
# 2015/11/26, Grace, split jobs into several sge file                       #
# 2016/11/11, Grace, change output extension to .log                        #
# 2019/04/20, Grace, change to gaussian 16, and modify the structure of code#   
#                                                                           #
#############################################################################

# functions 
function check(){
    # $1 = 'all' or filename
    [ "$1" == "" ] && \
    echo 'No file, you must key-in "all" or the name of G16 input file' && \
    exit
    testall=$(ls | grep '.com' )
    [ "$testall" == "" ] && \
    echo 'No G16 input file; filename extension is .com' && exit
}

function genlist(){
    # $1 = 'all' or filename
    if [ "$1" == "all" ]
    then
        ls | grep '.com'  | sed 's/.com//g' > list.dat
        
    else
        echo $1 | sed 's/.com//g' > list.dat 
    fi
}

function selectNumNode(){
    # $1 = list.dat 
    njobs=$(wc -l $1 | awk '{print $1}')
    echo ''
    echo "Amount of jobs: $njobs"
    echo "Current PATH: `pwd`"
    echo ''
    read -p 'How many nodes do you want? ' Nnode
    echo ''
}

function qsub_header(){
    # $1 = $Nnode 
    # $2 = list.dat 
    # $3 = $fileName
    Njobs=$(wc -l $2 | awk '{print $1}')
    quotient=$(( $Njobs/$1 ))
    remainder=$(( $Njobs%$1 ))
    for (( i=1;i<= $1; i++))
    do
cat << EOF > $3$i.sge
#!/bin/bash
############################################################
#  Program :                                               #
#       Submit the Gaussian 16 job through SGE(sun grid    #
#       engine) system                                     #
############################################################
# 2019/04/20, Grace, g16 version
export PATH=$PATH:$HOME/bin:/opt/util

### Default Control
## Run job through bash shell
#$ -S /bin/sh -w w -j y -cwd 	### Run job through bash shell
### Join stdout and stderr
#$ -j y							### Join stdout and stderr
## Resource control' 
## $ -l hostname='q9*|q8*|q7*|q1*'			### Resource control
### Use current working directory
#$ -cwd							### Use current working directory

### SGE Environment
echo '== SGE Environment =='
echo "Working directory is \$SGE_O_WORKDIR"
cd \$SGE_O_WORKDIR

echo 'Job starts'
echo "    Host: \$HOSTNAME"
echo '    Date:' `date`
echo 'Directory:' `pwd` 

### G16 Setup 
export g16root=/opt
export GAUSS_EXEDIR=\$g16root/g16
export GAUSS_SCRDIR=/scratch/$USER/g03
export LD_LIBRARY_PATH=/opt/gcc-8.2.0/lib64:$LD_LIBRARY_PATH:\$g16root/g16:\$g16root/g16/bsd
export PATH=$PATH:\$GAUSS_EXEDIR:\$g16root/g16/bsd

echo g16root is \$g16root
echo g16 scratch is \$GAUSS_SCRDIR

### Job Script
echo "Your job:"
EOF
    done
}

function qsub_foot(){
    # $1 = $Nnode 
    # $2 = $quotient 
    # $3 = $remainder
    # $4 = list.dat
    # $5 = $fileName

    a=0
    for (( i=1;i<=$1;i++ ))
    do 
        for (( j=1;j<=$2;j++))
        do 
            a=$(( $a+1 ))
            jobname=$( sed -n "$a,$a p" $4)
cat << EOF >> $5$i.sge
time g16  < $jobname.com  > $jobname.log
EOF
        done
    done

    if [ $3 != '0' ]
    then
        for (( j=1;j<=$3;j++ ))
        do 
            a=$(( $a+1 ))
            jobname=$( sed -n "$a,$a p" $4)
cat << EOF >> $5$1.sge
time g16 <  $jobname.com  >  $jobname.log
EOF
        done
    fi
}

# Main program
function main(){
    # 1. check the input arguments have problem or not
    check $1 
    # 2. count all/selected gaussian input into a list
    genlist $1 # output: list.dat 
    # 3. user defined: select the amount of nodes
    selectNumNode list.dat # output variable: Nnode
    # 4. generate the header of submitted files
    filelist=(Vodka Whiskey Brandy Vermouth Cognac Beer PortWine Rum Gin)
    fileName=${filelist[$(( $RANDOM%10 ))]}
    qsub_header $Nnode list.dat $fileName # output variables: 1. $quotient, 2. $remainder
    # 5. allocate jobs into different submitted files
    qsub_foot $Nnode $quotient $remainder list.dat $fileName
    for ((i=1;i<=$Nnode;i++))
    do
        qsub $fileName$i.sge 
    done
    rm -f list.dat 
    }

main $1
